name: Testing

on:
    push:
        branches:
            - main
            - staging
            - develop
    pull_request:
        types: [ ready_for_review, opened, synchronize, reopened ]
        branches:
            - main
            - staging
            - develop

jobs:
    lint:
        if: github.event.pull_request.draft == false
        name: Test
        runs-on: ubuntu-latest
        concurrency:
            group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
            cancel-in-progress: true
        services:
            redis:
                image: redis:7-alpine
                ports:
                    - 6379:6379
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            -   name: Setup PHP with tools
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.4
                    tools: composer

            -   name: Check out code
                uses: actions/checkout@v5

            -   name: Configure composer
                run: composer config github-oauth.github.com ${{ secrets.COMPOSER_AUTH }}

            -   name: Cache Composer packages
                id: composer-cache
                uses: actions/cache@v4
                with:
                    path: vendor
                    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-

            -   name: Install Composer dependencies
                if: steps.composer-cache.outputs.cache-hit != 'true' # Skip if cache hit
                run: composer install --prefer-dist --no-interaction --no-progress --no-ansi --optimize-autoloader

            -   name: Copy .env file
                run: cp .env.example .env

            -   name: Generate key
                run: php artisan key:generate

            -   name: Set up PostgreSQL
                uses: ankane/setup-postgres@v1
                with:
                    database: laravel_starter
                    postgres-version: 14

            -   name: Configure database for CI
                run: sed -i 's/DB_USERNAME=postgres/DB_USERNAME=runner/' .env

            -   name: Create testing schema
                run: psql -d laravel_starter -c "CREATE SCHEMA IF NOT EXISTS testing;"

            -   name: Run database migrations
                run: php artisan migrate --force

            -   name: Run Integration tests
                run: composer test -- --ci --group=integration

            -   name: Run Unit tests
                run: composer test -- --ci --group=unit

            -   name: Upload artifacts
                uses: actions/upload-artifact@v4
                if: failure()
                with:
                    name: Logs
                    path: ./storage/logs
